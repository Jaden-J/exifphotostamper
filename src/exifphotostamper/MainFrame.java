/*
 * MainFrame.java
 *
 * Created on 2007年6月16日, 下午 9:28
 */

package exifphotostamper;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JTextField;

/**
 *
 * @author  rack
 */
public class MainFrame extends javax.swing.JFrame {
    
    private ComboBoxModel allSystemFonts = new DefaultComboBoxModel(java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getAvailableFontFamilyNames());
    private Color fontColor = Color.WHITE;
    private ExifPhotoStamper stamp ;
    /** Creates new form MainFrame */
    public MainFrame() {
        
        initComponents();
        cancelBtn.setEnabled(false);
        stamp = new exifphotostamper.ExifPhotoStamper();
        stamp.setUi(this);
        java.lang.String[] cornerOpt = new java.lang.String[4];
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("exifphotostamper/messages");
        cornerOpt[0] = bundle.getString("TopLeft");
        cornerOpt[1] = bundle.getString("TopRight");
        cornerOpt[2] = bundle.getString("BottomRight");
        cornerOpt[3] = bundle.getString("BottomLeft");
        cornerCombo.setModel(new javax.swing.DefaultComboBoxModel(cornerOpt));
        loadProperties();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        startDateLabel = new javax.swing.JLabel();
        startDate = new javax.swing.JTextField();
        sourceDirLabel = new javax.swing.JLabel();
        sourceDir = new javax.swing.JTextField();
        sourceDirBtn = new javax.swing.JButton();
        targetDirLabel = new javax.swing.JLabel();
        targetDir = new javax.swing.JTextField();
        targetDirBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        startBtn = new javax.swing.JButton();
        fontNameLabel = new javax.swing.JLabel();
        fontNameCombo = new javax.swing.JComboBox();
        fontSizeLabel = new javax.swing.JLabel();
        fontSize = new javax.swing.JTextField();
        fontColorLabel = new javax.swing.JLabel();
        fontColorValue = new javax.swing.JTextField();
        colorBtn = new javax.swing.JButton();
        cornerLabel = new javax.swing.JLabel();
        marginLabel = new javax.swing.JLabel();
        qualityLabel = new javax.swing.JLabel();
        cornerCombo = new javax.swing.JComboBox();
        formatLabel = new javax.swing.JLabel();
        format = new javax.swing.JTextField();
        aboutBtn = new javax.swing.JButton();
        formatLabel1 = new javax.swing.JLabel();
        margin = new javax.swing.JTextField();
        quality = new javax.swing.JTextField();
        pixels = new javax.swing.JLabel();
        qualityTips = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ExifPhotoStamper v1.0b");

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("exifphotostamper/messages"); // NOI18N
        startDateLabel.setText(bundle.getString("StartDate")); // NOI18N

        startDate.setText("2006/11/02");

        sourceDirLabel.setText(bundle.getString("SourceDirectory")); // NOI18N

        sourceDirBtn.setText("...");
        sourceDirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceDirBtnActionPerformed(evt);
            }
        });

        targetDirLabel.setText(bundle.getString("TargetDirectory")); // NOI18N

        targetDirBtn.setText("...");
        targetDirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetDirBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText(bundle.getString("CancelButton")); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        startBtn.setText(bundle.getString("StartButton")); // NOI18N
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        fontNameLabel.setText(bundle.getString("FontName")); // NOI18N

        fontNameCombo.setModel(allSystemFonts);

        fontSizeLabel.setText(bundle.getString("FontSize")); // NOI18N

        fontSize.setText("60");

        fontColorLabel.setText(bundle.getString("FontColor")); // NOI18N

        fontColorValue.setText("[255,255,255]");

        colorBtn.setText("...");
        colorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorBtnActionPerformed(evt);
            }
        });

        cornerLabel.setText(bundle.getString("Corner")); // NOI18N

        marginLabel.setText(bundle.getString("Margin")); // NOI18N

        qualityLabel.setText(bundle.getString("Quality")); // NOI18N

        cornerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        formatLabel.setText(bundle.getString("Format")); // NOI18N

        format.setText("(%Yy%Mm%Dd) %y/%m/%d");

        aboutBtn.setText(bundle.getString("AboutButton")); // NOI18N
        aboutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutBtnActionPerformed(evt);
            }
        });

        formatLabel1.setText(bundle.getString("Progress")); // NOI18N

        margin.setText("100");

        quality.setText("0.8");

        pixels.setText(bundle.getString("Pixels")); // NOI18N

        qualityTips.setText(bundle.getString("QualityTip")); // NOI18N

        jTextPane1.setEditable(false);
        jTextPane1.setText(bundle.getString("FormatTip")); // NOI18N
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(formatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(qualityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(marginLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cornerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fontColorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fontNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(targetDirLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sourceDirLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(startDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(fontNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                        .addComponent(fontSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fontSize, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(sourceDir, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sourceDirBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(targetDir, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(targetDirBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(fontColorValue, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(colorBtn, 0, 83, Short.MAX_VALUE))
                                    .addComponent(cornerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(startDate, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                                    .addComponent(format, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(margin, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(quality, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pixels, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(qualityTips, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(formatLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(aboutBtn)
                                .addGap(75, 75, 75))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startDateLabel, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(startDate, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sourceDirLabel, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(sourceDir, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sourceDirBtn, javax.swing.GroupLayout.Alignment.CENTER))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(targetDirLabel, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(targetDir, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(targetDirBtn, javax.swing.GroupLayout.Alignment.CENTER))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fontNameLabel)
                    .addComponent(fontSizeLabel)
                    .addComponent(fontSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fontNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fontColorLabel, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(fontColorValue, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colorBtn, javax.swing.GroupLayout.Alignment.CENTER))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cornerLabel, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cornerCombo, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(marginLabel)
                    .addComponent(margin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pixels))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(qualityLabel, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(quality, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qualityTips, javax.swing.GroupLayout.Alignment.CENTER))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formatLabel, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(format, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formatLabel1, javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aboutBtn)
                    .addComponent(cancelBtn)
                    .addComponent(startBtn))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
private void loadProperties() {
        java.io.File propFile = new java.io.File(java.lang.System.getProperty("user.dir"), "setup.properties");
        if (propFile.exists()) {
            try {
                Properties prop = new Properties();
                InputStream is = new FileInputStream(propFile);
                prop.load(is);
                is.close();
                
                startDate.setText((String) prop.get("startDate"));
                sourceDir.setText((String) prop.get("sourceDir"));
                targetDir.setText((String) prop.get("targetDir"));
                fontSize.setText((String) prop.get("fontSize"));
                margin.setText((String) prop.get("margin"));
                format.setText((String) prop.get("format"));
                quality.setText((String) prop.get("quality"));
                fontColor = new Color(Integer.parseInt((String)prop.get("fontColor")));
                fontColorValue.setText("[" + fontColor.getRed() + "," + fontColor.getGreen()+","+ fontColor.getBlue()+"]");
                
                int fontNameIdx = ((DefaultComboBoxModel)fontNameCombo.getModel()).getIndexOf((String) prop.get("fontName") );
                fontNameCombo.setSelectedIndex(fontNameIdx);

                cornerCombo.setSelectedIndex(Integer.parseInt((String) prop.get("corner")));
                
            } catch (Exception ex) {
                ex.printStackTrace();
                Logger.getLogger("global").log(Level.SEVERE, null, ex);
            }
        }    
}

private void storeProperties() {
        java.io.File propFile = new java.io.File(java.lang.System.getProperty("user.dir"), "setup.properties");
        Properties prop = new Properties();
        
            try {
                OutputStream os = new FileOutputStream(propFile);
                prop.put("startDate", startDate.getText());
                prop.put("sourceDir", sourceDir.getText());
                prop.put("targetDir", targetDir.getText());
                prop.put("fontName", fontNameCombo.getSelectedItem());
                prop.put("fontSize", fontSize.getText());
                prop.put("fontColor", (Integer.valueOf(fontColor.getRGB())).toString());
                prop.put("margin", margin.getText());
                prop.put("corner", Integer.toString(cornerCombo.getSelectedIndex()));
                prop.put("format", format.getText());
                prop.put("quality", quality.getText());
                prop.store(os, "ExifPhotoStamper v1.0b");
                os.close();
            } catch (Exception ex) {
                Logger.getLogger("global").log(Level.SEVERE, null, ex);
            }        
        
}

private void aboutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutBtnActionPerformed
    
    StringBuffer sb = new StringBuffer("ExifPhotoStamper v1.0b \n\n");
    sb.append("Copyright (c) 2007 Rack Lin (racklin.blogspot.com) \n");
    sb.append("Email: racklin@gmail.com \n");
    sb.append("My Chinese Blog:  http://racklin.blogspot.com/");
    javax.swing.JOptionPane.showMessageDialog(this, sb.toString());
}//GEN-LAST:event_aboutBtnActionPerformed

private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
    
    startBtn.setEnabled(true);//GEN-LAST:event_cancelBtnActionPerformed
    cancelBtn.setEnabled(false);
    stamp.setStop(true);
    
}

private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
    
    File srcDir = new File(sourceDir.getText());
    File tgtDir = new File(targetDir.getText());
    java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("exifphotostamper/messages"); // NOI18N
    
    if (!srcDir.isDirectory() || !srcDir.canRead() || sourceDir.getText().length() == 0) {
        javax.swing.JOptionPane.showMessageDialog(this, sourceDir.getText() + bundle.getString("NotExists"));
        return ;
    }
    
    if (!tgtDir.isDirectory() || targetDir.getText().length() == 0) {
        if(!tgtDir.mkdir()) {
            javax.swing.JOptionPane.showMessageDialog(this, targetDir.getText() + bundle.getString("CannotWrite"));
            return ;
        }
    }
    
    if (sourceDir.getText().equalsIgnoreCase(targetDir.getText())) {
        javax.swing.JOptionPane.showMessageDialog(this, bundle.getString("SourceTargetTheSame"));
        return ;
    }
    
    startBtn.setEnabled(false);
    cancelBtn.setEnabled(true);
    stamp.setStop(false);
    stamp.setSourceDir(sourceDir.getText());
    stamp.setTargetDir(targetDir.getText());
    stamp.setStartDate(startDate.getText());
    stamp.setFontColor(fontColor);
    stamp.setFontName((String)fontNameCombo.getSelectedItem());
    stamp.setFontSize(Integer.parseInt(fontSize.getText()));
    stamp.setFormat(format.getText());
    stamp.setMargin(Integer.parseInt(margin.getText()));
    stamp.setQuality(Float.parseFloat(quality.getText()));
    stamp.setCorner(cornerCombo.getSelectedIndex()+1);
    storeProperties();
    (new Thread(stamp)).start();
    
}//GEN-LAST:event_startBtnActionPerformed

private void colorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorBtnActionPerformed
    
    javax.swing.JColorChooser dialog = new JColorChooser();
    fontColor = dialog.showDialog(colorBtn,"", fontColor);
    if (fontColor != null) fontColorValue.setText("[" + fontColor.getRed() + "," + fontColor.getGreen()+","+ fontColor.getBlue()+"]");
}//GEN-LAST:event_colorBtnActionPerformed

private void targetDirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetDirBtnActionPerformed
    
    JFileChooser dialog = new JFileChooser();
    dialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    dialog.showOpenDialog(targetDirBtn);
    if (dialog.getSelectedFile() != null) targetDir.setText(dialog.getSelectedFile().toString());
}//GEN-LAST:event_targetDirBtnActionPerformed

    private void sourceDirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceDirBtnActionPerformed
        
        JFileChooser dialog = new JFileChooser();
        dialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        dialog.showOpenDialog(sourceDirBtn);
        if (dialog.getSelectedFile() != null) sourceDir.setText(dialog.getSelectedFile().toString());
        
}//GEN-LAST:event_sourceDirBtnActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton colorBtn;
    private javax.swing.JComboBox cornerCombo;
    private javax.swing.JLabel cornerLabel;
    private javax.swing.JLabel fontColorLabel;
    private javax.swing.JTextField fontColorValue;
    private javax.swing.JComboBox fontNameCombo;
    private javax.swing.JLabel fontNameLabel;
    private javax.swing.JTextField fontSize;
    private javax.swing.JLabel fontSizeLabel;
    private javax.swing.JTextField format;
    private javax.swing.JLabel formatLabel;
    private javax.swing.JLabel formatLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField margin;
    private javax.swing.JLabel marginLabel;
    private javax.swing.JLabel pixels;
    private javax.swing.JTextField quality;
    private javax.swing.JLabel qualityLabel;
    private javax.swing.JLabel qualityTips;
    private javax.swing.JTextField sourceDir;
    private javax.swing.JButton sourceDirBtn;
    private javax.swing.JLabel sourceDirLabel;
    private javax.swing.JButton startBtn;
    private javax.swing.JTextField startDate;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JTextField targetDir;
    private javax.swing.JButton targetDirBtn;
    private javax.swing.JLabel targetDirLabel;
    // End of variables declaration//GEN-END:variables
    
    public void finishAllFiles() {
        startBtn.setEnabled(true);
        cancelBtn.setEnabled(false);
    }
    
    public void finishFileIndex(int index) {
        jProgressBar1.setValue((index+1));
    }
    
    public void setFilesCount(int count) {
        jProgressBar1.setMaximum(count);
    }
    
}
